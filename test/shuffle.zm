/*
 * Implements shuffling of all to be shuffled items
 */

import defs;

/**
 * Shuffle all items in this experiment.
 *
 * All items are shuffled without any constraints, except for
 * the test item block. The test item block is shuffled in
 * sub blocks of 7.
 */
int shuffle_test_items()
{
    int nth_block   = 0;

    learn_items.shuffle(0, -1);
    prac_items.shuffle(0, -1);
    discrimination_items.shuffle(0, -1);

    while (nth_block * BLOCK_SIZE + BLOCK_SIZE - 1 < test_items.size) {
        test_items.shuffle(
            nth_block * BLOCK_SIZE,
            nth_block * BLOCK_SIZE + BLOCK_SIZE
            );
        nth_block++;
    }

    if (test_items.size % BLOCK_SIZE != 0) {
        print_error(
            "Warning the total number of test_items isn't a multiple of " +
            BLOCK_SIZE + "\n"
            "This means that only the items up to a multiple of " +
            BLOCK_SIZE + " smaller\n"
            "than the total number of test items is shuffled.\n\n"
            );
        print_error("test_items.size = " + test_items.size + "\n");
    }

    return OK;
}

